name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0.0, v20.15.10
  workflow_dispatch:  # Allow manual triggering

# Add explicit permissions needed for release creation
permissions:
  contents: write
  packages: write

jobs:
  # First create the release draft
  create-draft-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      version: ${{ steps.get_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version from package.json: $VERSION"
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Stickier Note v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false
          body: |
            # Stickier Note v${{ steps.get_version.outputs.version }} Release
            
            ## What's Changed
            * Optimized application size
            * Improved performance
            * Better user experience
            
            ## Download the appropriate package for your platform
            - Windows: [Stickier.Note.Setup.${{ steps.get_version.outputs.version }}.exe](https://github.com/ejsinfuego/stickier-note/releases/download/v${{ steps.get_version.outputs.version }}/Stickier.Note.Setup.${{ steps.get_version.outputs.version }}.exe)
            - Linux: [Stickier.Note-${{ steps.get_version.outputs.version }}.AppImage](https://github.com/ejsinfuego/stickier-note/releases/download/v${{ steps.get_version.outputs.version }}/Stickier.Note-${{ steps.get_version.outputs.version }}.AppImage)
            
            ### Manual macOS build
            macOS builds will be uploaded manually by the maintainer.
            
            See installation instructions in the [README](https://github.com/ejsinfuego/stickier-note#installation-instructions)

  # Build for Windows
  build-windows:
    name: Build Windows
    needs: create-draft-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Windows
        run: |
          npm run build:optimized
          npx electron-builder --win --publish never
      
      - name: List build outputs
        run: |
          echo "Listing all files in the current directory:"
          dir
          echo "Listing dist directory contents:"
          dir dist
          echo "Finding all EXE files:"
          Get-ChildItem -Path . -Recurse -Include "*.exe" | ForEach-Object { $_.FullName }
      
      # Upload Windows build
      - name: Upload Windows Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-draft-release.outputs.upload_url }}
          asset_path: "./dist/Stickier Note Setup ${{ needs.create-draft-release.outputs.version }}.exe"
          asset_name: "Stickier.Note.Setup.${{ needs.create-draft-release.outputs.version }}.exe"
          asset_content_type: application/octet-stream

  # Build for Linux
  build-linux:
    name: Build Linux
    needs: create-draft-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Linux
        run: |
          npm run build:optimized
          npx electron-builder --linux --publish never
      
      - name: List build outputs
        run: |
          echo "Listing all files in the current directory:"
          ls -la
          echo "Listing dist directory contents:"
          ls -la dist || echo "dist directory not found"
          echo "Finding app.asar file:"
          find . -name "app.asar"
      
      - name: Upload Linux AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-draft-release.outputs.upload_url }}
          asset_path: "./dist/Stickier Note-${{ needs.create-draft-release.outputs.version }}.AppImage"
          asset_name: "Stickier.Note-${{ needs.create-draft-release.outputs.version }}.AppImage"
          asset_content_type: application/octet-stream

  # Update README with download links
  update-readme:
    name: Update README with Download Links
    needs: [create-draft-release, build-windows, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Use the built-in token with write permissions
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update README with new version
        run: |
          VERSION="${{ needs.create-draft-release.outputs.version }}"
          
          # Update README.md with new version and download links
          sed -i "s/### Current Version: .*/### Current Version: $VERSION/" README.md
          
          # Update Windows download link
          sed -i "s|https://github.com/ejsinfuego/stickier-note/releases/latest/download/Stickier.Note.Setup..*.exe|https://github.com/ejsinfuego/stickier-note/releases/download/v$VERSION/Stickier.Note.Setup.$VERSION.exe|" README.md
          
          # Update Linux download link
          sed -i "s|https://github.com/ejsinfuego/stickier-note/releases/latest/download/Stickier.Note-.*.AppImage|https://github.com/ejsinfuego/stickier-note/releases/download/v$VERSION/Stickier.Note-$VERSION.AppImage|" README.md
          
          cat README.md
      
      # Use the dedicated GitHub action for making verified commits
      - name: Create Pull Request for README update
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update README with download links for v${{ needs.create-draft-release.outputs.version }}"
          title: "Update README with download links for v${{ needs.create-draft-release.outputs.version }}"
          body: |
            This PR updates the README.md file with the latest download links for version ${{ needs.create-draft-release.outputs.version }}.
            
            This is an automated PR created by the GitHub Actions workflow.
          branch: update-readme-v${{ needs.create-draft-release.outputs.version }}
          base: main
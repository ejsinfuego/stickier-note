name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0.0, v20.15.10
  workflow_dispatch:  # Allow manual triggering

# Add explicit permissions needed for release creation
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  # Simplified approach - just build for each platform directly
  build-all:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-x11-0 libxss1 libgtk-3-0 libnotify-dev libatspi2.0-0 libnss3 libxtst6
          
      - name: Build and Publish
        env:
          # Use built-in token to avoid malformed token issues
          GH_TOKEN: ${{ github.token }}
          # Disabling code signing for macOS
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: |
          npm run build
          
          # For macOS
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            npx electron-builder --mac --publish always
          fi
          
          # For Windows
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npx electron-builder --win --publish always
          fi
          
          # For Linux
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            npx electron-builder --linux --publish always
          fi
        shell: bash
        
  # Add a final job that checks the results and adds version-specific links to the release
  update-release-notes:
    name: Update Release Notes
    needs: build-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      
      - name: Update Release Notes
        run: |
          echo "Release ${{ steps.package-version.outputs.current-version }} created successfully."
          echo "Assets are available on the release page."
          echo "Visit https://github.com/ejsinfuego/stickier-note/releases/latest to download and see the details."
        shell: bash